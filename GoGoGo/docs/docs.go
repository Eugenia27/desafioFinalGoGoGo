// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://developers.gogogo.ctd.com.ar/es_ar/terminos-y-condiciones",
        "contact": {
            "name": "API Support",
            "url": "https://developers.gogogo.ctd.com.ar/support"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/dentists/{id}": {
            "get": {
                "description": "Gets a dentist by ID from the repository",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dentists.Dentist"
                ],
                "summary": "Gets a dentist by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dentists.Dentist"
                        }
                    }
                }
            }
        },
        "/patients": {
            "put": {
                "description": "Modifica un paciente existente por id y lo almacena en la base de datos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Modifica un paciente existente",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/patients.Patient"
                        }
                    }
                }
            },
            "post": {
                "description": "Guarda nuevo paciente en la base de datos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Guarda nuevo paciente",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/patients.Patient"
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifica uno o más atributos de un paciente existente y almacena los cambios en la base de datos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Modifica uno o más atributos de un paciente existente",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/patients.Patient"
                        }
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "description": "Obtiene un paciente por id desde la base de datos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Obtiene un paciente por id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/patients.Patient"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un paciente por id en la base de datos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "patients"
                ],
                "summary": "Elimina un paciente por id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Paciente"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dentists.Dentist": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "idDentist": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "registration_number": {
                    "type": "integer"
                }
            }
        },
        "patients.Patient": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "credential_id": {
                    "type": "string"
                },
                "discharge_date": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "idPatient": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Clinica Odotntologica Dientes GoGoGo",
	Description:      "This API Handle Clinica.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
